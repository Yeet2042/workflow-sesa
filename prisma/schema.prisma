// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Company {
  id         Int     @id @default(autoincrement())
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  totalExpenditures totalExpenditure[]
  expenditures expenditure[]
  departments department[]
  users     User[]
  budgets   budget[]
}

model department {
  id         Int      @id @default(autoincrement())
  name       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  companyId  Int
  company    Company  @relation(fields: [companyId], references: [id])
  expenditure expenditure[]
  users     User[]
  budgets   budget[]
}

model User {
  id         Int     @id @default(autoincrement())
  email      String  @unique
  password   String
  name       String?
  companyId  Int?
  company    Company? @relation(fields: [companyId], references: [id])
  departmentId Int?
  department   department? @relation(fields: [departmentId], references: [id])
  role      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  budgets    budget[]
}

model budget {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  quantity    Int
  price       Float
  total       Float
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  companyId   Int
  company     Company  @relation(fields: [companyId], references: [id])
  departmentId   Int
  department     department  @relation(fields: [departmentId], references: [id])
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model totalExpenditure {
  id          Int      @id @default(autoincrement())
  year        Int
  amount      Float
  remaining   Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  companyId   Int
  company     Company  @relation(fields: [companyId], references: [id])
  expenditure expenditure[]
}

model expenditure {
  id Int @id @default(autoincrement())
  year        Int
  amount      Float
  remaining   Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  totalExpenditureId Int
  totalExpenditure   totalExpenditure  @relation(fields: [totalExpenditureId], references: [id])
  companyId   Int
  company     Company  @relation(fields: [companyId], references: [id])
  departmentId   Int
  department     department  @relation(fields: [departmentId], references: [id])
}